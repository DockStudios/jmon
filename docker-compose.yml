version: '3'

services:
  database:
    image: postgres:16

    ports:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
    volumes:
      - postgres:/var/lib/postgresql/data

  broker:
    image: rabbitmq:3.13-management
    ports:
     - 5672:5672
     - 15672:15672
    restart: always
    env_file:
     - .env
    environment:
      RABBITMQ_DEFAULT_USER: $BROKER_USERNAME
      RABBITMQ_DEFAULT_PASS: $BROKER_PASSWORD

  redis:
    image: redis:7

    restart: always
    command: redis-server --appendonly yes --requirepass $REDIS_PASSWORD
    env_file:
     - .env
    volumes:
     - redis:/data

  victoriametrics:
    image: victoriametrics/victoria-metrics:v1.106.0
    restart: always
    command: -retentionPeriod=1y
    volumes:
     - victoriametrics:/victoria-metrics-data

  minio:
    image: minio/minio
    ports:
     - 9000:9000
     - 9001:9001
    restart: always
    env_file:
     - .env
    volumes:
     - minio:/data
    environment:
      MINIO_ACCESS_KEY: $AWS_ACCESS_KEY_ID
      MINIO_SECRET_KEY: $AWS_SECRET_ACCESS_KEY
    command: server /data --console-address ":9001"

  createbucket:
    image: minio/mc
    depends_on:
      - minio
    env_file:
     - .env
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add jmonminio $AWS_ENDPOINT $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY;
      /usr/bin/mc mb jmonminio/$AWS_BUCKET_NAME;
      exit 0;
      "

  dbupgrade:
    build: .
    command: alembic upgrade head
    env_file:
     - .env
    links:
     - database
     - redis
     - victoriametrics

  server:
    image: ghcr.io/dockstudios/jmon-server:$JMON_RELEASE
    build:
      context: .
      dockerfile: Dockerfile.server

    command: python3 -u ./server.py
    env_file:
     - .env
    restart: always
    ports:
     - 5000:5000
    links:
     - database
     - broker
     - redis
     - victoriametrics

  scheduler:
    image: ghcr.io/dockstudios/jmon:$JMON_RELEASE
    build: .
    command: celery -A jmon.scheduler.app beat -S redbeat.RedBeatScheduler  --loglevel=INFO
    env_file:
     - .env
    restart: always
    links:
     - database
     - broker
     - minio
     - redis
     - victoriametrics

  flower:
    image: ghcr.io/dockstudios/jmon:$JMON_RELEASE
    build: .
    command: celery -A jmon.app flower --host=0.0.0.0 --broker_api=http://guest:guest@${BROKER_HOST}:15672/api/vhost
    ports:
     - 5555:5555
    env_file:
     - .env
    restart: always
    links:
     - database
     - broker
     - minio
     - redis

  agent:
    image: ghcr.io/dockstudios/jmon:$JMON_RELEASE
    build: .
    # Specify the test types as queues (requests, chrome, firefox)
    # At least once agent must have the 'default' queue
    # Concurrency should always be set to 1 - to add more concurrency,
    # scale the agent containers
    command: celery -A jmon.worker.app worker -Q default,requests,chrome,firefox --concurrency=1 --loglevel=INFO
    init: true
    env_file:
     - .env
    restart: always
    links:
     - database
     - broker
     - minio
     - redis
     - victoriametrics
    # Mount noficiation plugins
    volumes:
     - ./jmon/plugins/notifications:/app/jmon/plugins/notifications:ro

volumes:
  victoriametrics:
  postgres:
  redis:
  minio:

